<div id=header>

      <!-- Fixed navbar -->
    <nav class="navbar navbar-inverse navbar-fixed-top">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="/">Nicholas Agro</a>
        </div>
        <div id="navbar" class="navbar-collapse collapse">
          <ul class="nav navbar-nav">
            <li class="active"><a href="/">Welcome</a></li>
           <li><%= link_to(:examples) do %>Portfolio<%end%></li>
            <li><a href="about">About</a></li>
            <li><a href="contact">Contact</a></li>

          </ul>
        </div><!--/.nav-collapse -->
      </div>
    </nav>

</div>

    <div class="container theme-showcase" role="main">

      <!-- Main jumbotron for a primary marketing message or call to action -->
      <div class="jumbotron">
        <div id="jumbotron2">
        <br></br>
        <p>Here are a few examples of my work. Examples are added regularly, so check back soon...</p>
	</div>
      </div>



<a  href="https://github.com/nagro2/chess" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/fdznx0cbnthf7jr/chess.jpg?raw=1"></a>
<p = class = description_of_app><b>Chess Game</b> - An interactive two-player chess game written in Ruby for the final project in the Ruby Programming section of Odin Bootcamp. The chessboard is displayed graphically using ascii chess characters. The program checks each move to confirm 
the move is valid for the type of piece being moved, the piece is not being moved off the board, the piece being moved belongs to the player, etc. For each move the program checks whether either king has gone into check, and if so, determines whether this has resulted in a checkmate. The program uses OOP methods. For example, each type of chess piece (pawn, rook etc) is defined once as a Class, then each piece on the board is created as an instance of a piece class. Uses YAML to save and restore games to a file. The program was developed using TDD (Top Down Development) techniques with RSpec. The spec file contains 69 tests which confirm that the code is working properly.
</p>
<br><br>

<a  href="https://github.com/nagro2/linux-kernel-mod-tutorial-fix" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/f5v10xgbtfbopei/Linux%20kernel%20mod%20bug%20fix.png?raw=1"></a>
<p = class = description_of_app><b>Linux kernel mod, bug fix to chardev.c</b> - The Linux kernel mod, chardev.c, at http://www.tldp.org/LDP/lkmpg/2.6/html/x569.html failed to compile on Linux kernel 3.13.0-32-generic with error: void value not ignored as it ought to be int ret = unregister_chrdev(Major, DEVICE_NAME); This was due to unregister_chrdev being changed to type void in later kernels. I fixed the error by changing the unregister_chrdev call to a type of void, and it now compiles properly. Full corrected example is listed here.
</p>
<br><br>

<a  href="https://nameless-temple-7233.herokuapp.com/articles" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/o70ptb6ak2zub4w/Blogger.jpg?raw=1"></a>
<p class= description_of_app><b>Blogger</b> - A blogging application authored in Rails. Blog entries and other information are stored in sqlite databases, which are controlled by Rails models. Articles can be tagged by category, and can have comments from readers.  Includes tools to create, delete and edit articles. User authentication is implemented with Sorcery. Created per assignment from the Odin Project bootcamp / Jumpstart Labs unit on Rails.
<br><a  href="https://github.com/nagro2/blogger-odin" target="_blank">View Source Code</a>
</p>
<br><br>

<a  href="http://htmlpreview.github.io/?https://github.com/nagro2/gallery_jq/blob/master/index.html" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/47kxkswthta7mzx/Sketcher.jpg?raw=1"></a>
<p class = description_of_app><b>Sketcher</b> - A sketcher application authored in javascript and using jquery. Vertical and horizontal resolution of the sketch can be configured by the user. Created for a project assigned by the Odin Project programming bootcamp in the Javascript/jQuery unit.
<br><a  href="https://github.com/nagro2/sketcher" target="_blank">View Source Code</a>
</p>
<br><br>

<a  href="https://github.com/nagro2/twitter_api_from_ruby/blob/master/ruby_tweet.rb" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/rgdquwwta9khfmz/ruby_twitter.jpeg?raw=1"></a>
<p = class = description_of_app><b>Ruby to Twitter</b> - A Ruby program to access Twitter via API. The program's capabilities include creating a tweet, viewing latest tweet from all friends, sending a group tweet, sending direct message, listing all followers, and listing all friends. Completed as part of the Jumpstart Labs Microblogger tutorial assigned by Odin Bootcamp.
</p>
<br><br>

<a  href="https://github.com/nagro2/binary-tree" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/690taoi0g26oxf6/binary-treej.jpg?raw=1"></a>
<p = class = description_of_app><b>Binary Tree with Breadth First, Depth First and Recursive Depth First searches</b> - A Ruby program that creates a binary tree then applies various search methods including Breadth First, Depth First, and Recursive Depth First. The steps in each search are displayed and the output confirms that the recursive and non-recursive searches traverse the tree in exacly the same way. Created for a project assigned by the Odin Project programming bootcamp in the Data Structures and Algorithms unit.
</p>
<br><br>

<a  href="http://htmlpreview.github.io/?https://github.com/nagro2/restaurant-for-odin/blob/master/index.html" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/aj5v1s58u78yetm/restaurant.jpg?raw=1"></a>
<p = class = description_of_app><b>jQuery / Javascript Restaurant website</b> - A dynamic html website written in Javascript and jQuery. Each page on the site is generated by a script, which adds html elements through jQuery. Transitions between pages utilize fade and wipe effects. Created for a project assigned by the Odin Project programming bootcamp.
<br><a  href="https://github.com/nagro2/restaurant-for-odin" target="_blank">View Source Code</a>
</p>
<br><br>



<a  href="http://htmlpreview.github.io/?https://github.com/nagro2/google_homepage/blob/master/index.html" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/kob4jfkr8t36dkh/google_homepage.jpg?raw=1"></a>
<p = class = description_of_app><b>Google Homepage Clone</b> - Completed as a project assigned by the Odin Project in the HTML/CSS unit,  the objective of was to use a CSS stylesheet to control the elements of a web page. Features include statically positioned top and bottom headers, icons, a textbox, and more.
<br><a  href="https://github.com/nagro2/google_homepage" target="_blank">View Source Code</a>
</p>
<br><br>

<a  href="http://htmlpreview.github.io/?https://github.com/nagro2/Project-Euler-solutions/blob/master/problem1.html" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/be03uyim3ghkw7n/Euler-Odin%20Problem%201.jpg?raw=1"></a>
<p class = description_of_app><b>Euler #1</b> - A solution to the Euler Project problem "Finding the sum of all multiples of 3 or 5 below 1000". Implemented as an embedded javascript program which displays it's result on a webpage. Created for a project assigned by the Odin Project programming bootcamp in the javascript unit.
<br><a  href="https://github.com/nagro2/Project-Euler-solutions" target="_blank">View Source Code</a>
</p>
<br><br>

<a  href="http://htmlpreview.github.io/?https://github.com/nagro2/Project-Euler-solutions/blob/master/problem2.html" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/nsupgx135kgthmo/Euler-Odin%20Problem%202.jpg?raw=1"></a>
<p class = description_of_app><b>Euler #2</b> - A solution to the Euler Project problem "Even Fibonacci Numbers". Implemented as an embedded javascript program which displays it's result on a webpage. Created for a project assigned by the Odin Project programming bootcamp in the javascript unit.
<br><a  href="https://github.com/nagro2/Project-Euler-solutions" target="_blank">View Source Code</a>
</p>
<br><br>

<a  href="http://htmlpreview.github.io/?https://github.com/nagro2/Project-Euler-solutions/blob/master/problem3.html" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/d9qewrtpt2yfkw6/Euler-Odin%20Problem%203.jpg?raw=1"></a>
<p class = description_of_app><b>Euler #3</b> - A solution to the Euler Project problem "Largest Prime Factor". Implemented as an embedded javascript program which displays it's result on a webpage. The Odin Project assignment modifies the requirements of the Euler Project problem by stating " just solve for numbers smaller than 1,000 and don't worry about making it efficient".
<br><a  href="https://github.com/nagro2/Project-Euler-solutions" target="_blank">View Source Code</a>
</p>
<br><br><br><br>


<a  href="https://github.com/nagro2/NikonD40-camera-control/blob/master/D40TetherQD.py" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/qusdbz4ln74mp54/D40TetherQD.jpg?raw=1"></a>
<p class = description_of_app><b>D40 Tether Quick and Dirty</b> - A Python script to control my Nikon D40 camera. Created very quickly for my own use, hence Quick and Dirty". It obtains values for aperture and shutter speed from the camera and modifies these under GUI control. Includes modes for single and multi photo sequences and can automatically display each photo after it is downloaded to the computer. Interface with the camera is through gphoto2 commands via the bash shell. GUI is implemented with Tkinter.</p>
<br><br><br><br>

<a  href="https://github.com/nagro2/weather-conditions-from-noaa/blob/master/noaa_weather.pl" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/8uezfepb88fpjud/noaa_weather.jpg?raw=1"></a>
<p class = description_of_app><b>Weather Conditions</b> - A Perl script to display weather conditions parsed from NOAA's website using regex pattern matching.</p>
<br><br><br><br>

<a  href="https://github.com/nagro2/arduino-thermometer/blob/master/DS18x20-temperature-with-lcd" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/9ncmvvtlx5i2cil/arduino%20ds18b20%20temperature%20with%20lcd.jpg?raw=1"></a>
<p class = description_of_app><b>Arduino Thermometer</b> - A C program written for Arduino (Arduino "sketch") to read temperature from a ds18b20 1 wire temperature sensor and display the result on an i2c lcd display.</p>
<br><br><br><br>

<a  href="https://github.com/nagro2/esp8266-client-to-google/blob/master/user_main.c" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/xxmi5lrte91e7ce/esp8266-client-to-google.jpg?raw=1"></a>
<p class = description_of_app><b>ESP8266 IoT Client to Google</b> - C code written for the esp8266 IoT embedded computer. It connects the esp8266 to a lan via wifi, then makes an http request to google.com and displays the received html page on the esp8266 serial console. Compiles under Espressif esp-iot-sdk-v9.2.</p>
<br><br><br><br>

<a  href="https://github.com/nagro2/esp8266-lua-temperature-sender/blob/master/ds18b20-wifi-send-sleep" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/u37ab2os5y0kdnx/esp8266-lua-temperature-sender.jpg?raw=1"></a>
<p class = description_of_app><b>ESP8266 Temperature Sender with Sleep</b> - Lua script written for the esp8266 IoT embedded computer running NodeMCU OS. Reads temperature from ds18b20 1 wire sensor, transmits the reading to a web server as an http get, sleeps to save power, then repeats.</p>
<br><br><br><br>


<a  href="https://github.com/nagro2/android-counter/blob/master/MainActivity.java" target="_blank"> <img class="screenshot2" src="https://www.dropbox.com/s/g1t53sknk0auych/counter_apk_on_phone.JPG?raw=1"></a>
<p class = description_of_app><b>Android App</b> - Android app developed in Android SDK. This was a proof of concept to develop an app and upload a working apk to a phone. The app is a simple counter which increments when the up button is pressed and decrements when the down button is pressed. Included here is the java code which implements the counter.</p>
<br><br><br><br>

<a  href="https://github.com/nagro2/sunrise-sunset-calculator/blob/master/sunrise-sunset.rb" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/64x8t184mnmxjob/Sunrise-Sunset-gnuplot.jpg?raw=1"></a>
<p class = description_of_app><b>Sunrise-Sunset calculator</b> - Ruby script to calculate Sunrise and Sunset times by implementing a Sunrise-Sunset algorithm from the United States Naval Observatory. The screenshot is a graph of data generated by the script for a one year time period, then plotted using gnuplot.</p>
<br><br><br><br>

<a  href="https://github.com/nagro2/wmr100-launcher-script/blob/master/wmr100_launcher" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/hdvv1sk6ukl5su5/wmr100_launcher.jpg?raw=1"></a>
<p class = description_of_app><b>Launcher shell script</b> - Bash shell script which launches and restarts a Linux program as needed, and stores the restart count in a file for later reference.</p>
<br><br><br><br>

<a  href="https://github.com/nagro2/mastermind/tree/master" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/kkx3w6v5lmw6ryl/mastermind.jpg?raw=1"></a>
<p class = description_of_app><b>Master Mind game</b> - A Ruby script version of the Master Mind board game, created for an assignment from Odin Project programming bootcamp. Master Mind is a game which involves guessing the colors of four hidden pegs using clues about each guess.</p>
<br><br><br><br>

<a  href="https://github.com/nagro2/hangman/blob/master/hangman.rb" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/qi803mowwa59ghh/hangman.jpg?raw=1"></a>
<p class = description_of_app><b>Hangman game</b> - A Ruby script version of the Hangman game. Created for an assignment from Odin Project programming bootcamp.</p>
<br><br><br><br>

<a  href="http://htmlpreview.github.io/?https://github.com/nagro2/calculator-per-odin-project/blob/master/index.html" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/1io78ym2azxmh2z/calculator-odin.jpg?raw=1"></a>
<p class = description_of_app><b>Calculator in Javascript and jQuery</b> - A calculator with in-browser keypad and display, completed as an assignment by the Odin Project bootcamp.
<br><a  href="https://github.com/nagro2/calculator-per-odin-project" target="_blank">View Source Code</a>
</p>
<br><br><br><br>


<a  href="https://github.com/nagro2/simple-ruby-web-server/tree/master" target="_blank"> <img class="screenshot1" src="https://www.dropbox.com/s/sb5mkny4rwmvjhh/ruby%20web%20server.jpg?raw=1"></a>
<p class = description_of_app><b>Ruby web server</b> - A simple web server written in Ruby, as a proof of concept for creating web servers in Ruby without Rails. Created for an assignment from Odin Project programming bootcamp.</p>
<br><br><br><br>

<div class="footer_c"> <div class="container">  <p>&copy; 2015, 2016 Nicholas Agro</p> </div>

